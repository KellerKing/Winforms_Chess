name: Testing
#Wann das ding laufen soll
on:
  push:
    branches:  
      - dev 
  pull_request:
    branches: [ main ]

jobs:
  #name des Jobs
  build:

    strategy:
      matrix:
        configuration: [Debug]
  #Wo das ding laufen soll (auf welchem System)
    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: Winforms_Chess.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path: Winforms_Chess_Tests\Chess.Produktlogic.Test.csproj                # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 5.0.x

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup Nuget
      uses: NuGet/setup-nuget@v1.0.2
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

    - name: Restore Nuget
      run: nuget restore $env:Solution_Name

    - name: Build the Solution
      run: msbuild $env:Solution_Name

    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test /p:Configuration=Debug /p:Platform="Any CPU"

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    #- name: Restore the application
    #  run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
    #  env:
    #    Configuration: ${{ matrix.configuration }}
